______________________________________
        PHP BLOG - GET READY
______________________________________

ETAPE 1
--------------------------------------
OK - Creation du repo GIT et recuperer-le
OK - Installation de l'Application
OK - Initialisation d'un premier commit
OK - preparation du fichier Install SH
OK - Modelisation de la Base *****
OK - Configurer la base a utiliser sur le fichier .Env 
OK - Description des tables 
  1° User (name, email, password, role [Admi, editor])
  2° Post (title, content, status, published_at, User_id, Category_Id)
  3° Categorie (title)
  4° tags (name)
  5° picture (Post_id, name, uri, size, mime)
  6° Post_Tag (Tag_id, Post_id)

OK - Modelisation de la base sur MySQL Work bench
OK - preparer les model et migration.
  ° php artisan make:model "NomTable" --migration

OK - Ecrire les migration En tenant compte des 
  ° Liste des methode pour ecrire les migrations : https://laravel.com/docs/5.2/migrations#creating-columns
  ° 
OK - Deployer les migrations


ETAPE 2
--------------------------------------
OK - Ecrire les relation entre les tables sur les models
OK - Preparation des données d'exemples et les deployer
  ° Post
  ° picture
  ° Tag
OK - enregistrer un utilisateur et des categorie a l'aide de Tinker


ETAPE 3 - Retrouver les donnée
--------------------------------------
OK - preparer les vues pour retrouver les donnée: 
    : auth\login : page de login 	|| LoginController
    : admin\post\[ceate, edit, index] 	|| PostController
    : front\[index, show, user]		|| FrontController
    : layouts\master
    : partials\[nav, footer])

OK - Controlleur pour renvoyer les Vues
  ° LoginController - Renvoi la page d'identification
  ° PostController - gere le CRUD
  ° FrontController - gere l'affichage coté visiteur

OK - faire les fichier template
OK - Preparation des routes pour renvoyer au vue 
OK - mettre les lien pour le Nav
OK - Mise en place du CRUD
OK - Prepater les controlleur
  ° Controlleur pour les action du CRUD

OK - Verifier le status des article à afficher

OK - Prepater les vues
- Install Laravel DebugBar

Etape 3.Bis
--------------------------------------
OK - verifier laffichage des article s'il comporte les le titre, contenu, meta donnée et image
OK - redure le text de la page daccueil 
OK - Afficher les articles d'une meme categorie, puis afficher l'article si on clique sur le titre
OK - verifier la mise a jour de la date de modification
OK - s'assurer que les categorie sur le sidebar sont bien seux qui sont en base
OK - redeployer la table POST et suprimer le champ Picture_id

OK - refaire le diagrame des table de la base


Etape 4 - Mise en place des Asset
--------------------------------------
OK - mise en place des web tools : gulp pour sass
  ° Voir une mise en place de Grunt aussi (Optionnel)
  ° Faire l'inclution automatique des assets sur le html (Optionnel)

OK - configuration des et gestion des assets
v  ° Preparation des dossier SASS
v  ° Faire le choix des librairie JS à utiliser 

Etape 5
--------------------------------------
- gerer les utilisateur qui peuvent publier un contenu
- Mettre en place les bonne pratique vue en cours
  ° Gerer les 404
  ° Utiliser les service provider
- revoir le scripte install.sh














======================================
TECH Notes
--------------------------------------
Laravel install - Use composer :

- composer global require "laravel/installer" : permet d'initialiser les fichier la processus d'installation pour l'application. Notament, elle initialise la commande 'Laravel new'. A noter que aucune application qui doit empecher la connexion reseau ne doit etre actif, tel que les parfeux des anti-virus

- Laravel new "Nom_de_l_aplication" : permet d'installer le projet Laravel avec tout les dependance. Une autre alternative qui reproduit la meme chose : composer create-project --prefer-dist laravel/Laravel "Nom_du_projet"
- unit, conf, integ




TEMPLATING : 
--------------------------------------
@section : defini une partie du contenu de la page
@yield : affiche le contenu d'une section donnée
@extends : defini le template que la page doit heriter 



QUESTION 
--------------------------------------
- Cache des route,
- Factoriser les variable de gestion des connexion 











